html
  head
    -
      var cspContent = `
        default-src 'none';
        img-src ${cspSource} https: data:;
        style-src 'unsafe-inline' https://cdn.jsdelivr.net ${cspSource} https://cdnjs.cloudflare.com;
        script-src 'unsafe-inline' https://cdn.jsdelivr.net ${cspSource};
        font-src *;
      `;
    meta(http-equiv="Content-Security-Policy",  content=cspContent)
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet", type="text/css", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css")
    link(rel="stylesheet", type="text/css", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css")
    link(href!=styleURI, rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
    script(type="module", src="https://cdn.jsdelivr.net/npm/@vscode/webview-ui-toolkit@latest/dist/toolkit.js")
    
    style.
             :root {
         --vscode-font-family: var(--vscode-font-family, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif);
         --vscode-font-size: var(--vscode-font-size, 13px);
         --corgea-orange: #F56C26;
         --bs-primary: #F56C26;
         --bs-primary-rgb: 245, 108, 38;
       }
      
      body {
        font-family: var(--vscode-font-family);
        font-size: var(--vscode-font-size);
        color: var(--vscode-foreground);
        background-color: var(--vscode-editor-background);
        margin: 0;
        padding: 16px;
        line-height: 1.4;
      }
      
             .header {
         display: flex;
         justify-content: space-between;
         align-items: center;
         margin-bottom: 20px;
         padding-bottom: 12px;
         border-bottom: 1px solid var(--vscode-panel-border);
       }
       
       .header-left {
         display: flex;
         align-items: center;
         gap: 12px;
       }
       
       .logo {
         width: 24px;
         height: 24px;
         object-fit: contain;
       }
       
       .title {
         font-size: 18px;
         font-weight: 600;
         color: var(--vscode-foreground);
         margin: 0;
       }
      
      .tab-content {
        margin-top: 16px;
      }
      
      .nav-tabs {
        border-bottom: 1px solid var(--vscode-panel-border);
        margin-bottom: 20px;
      }
      
      .nav-tabs .nav-link {
        color: var(--vscode-descriptionForeground);
        border: none;
        border-bottom: 2px solid transparent;
        background: none;
        padding: 8px 16px;
        transition: all 0.2s;
      }
      
             .nav-tabs .nav-link:hover {
         color: var(--vscode-foreground);
         border-bottom-color: var(--corgea-orange);
       }
       
       .nav-tabs .nav-link.active {
         color: var(--vscode-foreground);
         border-bottom-color: var(--corgea-orange);
         background: none;
       }
      
      .accordion {
        --bs-accordion-border-color: var(--vscode-panel-border);
        --bs-accordion-bg: var(--vscode-editor-background);
      }
      
      .accordion-item {
        background-color: var(--vscode-editor-background);
        border: 1px solid var(--vscode-panel-border);
        margin-bottom: 8px;
        border-radius: 6px;
        overflow: hidden;
      }
      
      .accordion-header {
        margin-bottom: 0;
      }
      
      .accordion-button {
        background-color: var(--vscode-list-hoverBackground);
        color: var(--vscode-foreground);
        border: none;
        padding: 12px 16px;
        font-weight: 500;
        position: relative;
        transition: all 0.2s;
      }
      
      .accordion-button:hover {
        background-color: var(--vscode-list-activeSelectionBackground);
        color: var(--vscode-foreground);
      }
      
      .accordion-button:not(.collapsed) {
        background-color: var(--vscode-list-activeSelectionBackground);
        color: var(--vscode-foreground);
        box-shadow: none;
      }
      
      .accordion-button::after {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23ffffff'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
      }
      
      .accordion-button:not(.collapsed)::after {
        transform: rotate(-180deg);
      }
      
      .accordion-body {
        background-color: var(--vscode-editor-background);
        padding: 0;
      }
      
      .vulnerability-item {
        padding: 12px 16px;
        border-bottom: 1px solid var(--vscode-panel-border);
        cursor: pointer;
        transition: background-color 0.2s;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      
      .vulnerability-item:last-child {
        border-bottom: none;
      }
      
      .vulnerability-item:hover {
        background-color: var(--vscode-list-hoverBackground);
      }
      
      .vuln-info {
        flex: 1;
      }
      
      .vuln-name {
        font-weight: 500;
        color: var(--vscode-foreground);
        margin-bottom: 4px;
      }
      
      .vuln-details {
        font-size: 12px;
        color: var(--vscode-descriptionForeground);
        display: flex;
        gap: 12px;
        align-items: center;
      }
      
      .line-number {
        font-family: var(--vscode-editor-font-family);
        background: var(--vscode-textCodeBlock-background);
        padding: 2px 6px;
        border-radius: 3px;
        font-size: 11px;
      }
      
      .severity-badge {
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 11px;
        font-weight: 600;
        text-transform: uppercase;
        white-space: nowrap;
      }
      
      .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: var(--vscode-descriptionForeground);
      }
      
      .empty-icon {
        font-size: 48px;
        margin-bottom: 16px;
        opacity: 0.5;
      }
      
      .auth-container {
        text-align: center;
        padding: 40px 20px;
      }
      
      .auth-message {
        color: var(--vscode-descriptionForeground);
        margin-bottom: 16px;
        font-size: 14px;
      }
      
      .loading {
        text-align: center;
        padding: 40px 0;
        color: var(--vscode-descriptionForeground);
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: 16px;
      }
      
             .count-badge {
         background: var(--corgea-orange);
         color: #ffffff;
         padding: 2px 8px;
         border-radius: 12px;
         font-size: 11px;
         font-weight: 600;
         margin-left: 8px;
         box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
       }
      
      .file-path {
        font-family: var(--vscode-editor-font-family);
        font-size: 13px;
        color: var(--vscode-foreground);
        display: flex;
        align-items: center;
        gap: 8px;
      }
      
      .file-icon {
        opacity: 0.7;
      }
      
      .package-name {
        font-family: var(--vscode-editor-font-family);
        font-size: 13px;
        color: var(--vscode-foreground);
        display: flex;
        align-items: center;
        gap: 8px;
      }
      
      .package-icon {
        opacity: 0.7;
      }
      
             vscode-button {
         margin-left: auto;
       }
       
       .text-muted {
         color: var(--vscode-descriptionForeground);
         font-size: 13px;
       }
       
       .mt-2 {
         margin-top: 8px;
       }
       
       .mt-3 {
         margin-top: 16px;
       }
       
       .no-project-container {
         display: flex;
         justify-content: center;
         align-items: center;
         padding: 40px 20px;
         min-height: 300px;
       }
       
       .no-project-card {
         text-align: center;
         max-width: 400px;
       }
       
       .no-project-icon {
         margin-bottom: 20px;
       }
       
       .no-project-icon i {
         font-size: 48px;
         color: var(--vscode-descriptionForeground);
         opacity: 0.7;
       }
       
       .no-project-title {
         font-size: 20px;
         font-weight: 600;
         color: var(--vscode-foreground);
         margin: 0 0 16px 0;
       }
       
       .no-project-description {
         font-size: 14px;
         line-height: 1.5;
         color: var(--vscode-descriptionForeground);
         margin: 0 0 24px 0;
       }
       
       .no-project-actions {
         display: flex;
         flex-direction: column;
         gap: 12px;
         align-items: center;
       }
       
       .scan-button {
         min-width: 160px;
       }
       
       @media (min-width: 300px) {
         .no-project-actions {
           flex-direction: row;
           justify-content: center;
         }
       }
       
       /* Bootstrap primary color overrides */
       .btn-primary {
         background-color: var(--corgea-orange);
         border-color: var(--corgea-orange);
         color: #ffffff;
       }
       
       .btn-primary:hover,
       .btn-primary:focus {
         background-color: #e55a1f;
         border-color: #e55a1f;
         color: #ffffff;
       }
       
       .btn-primary:active {
         background-color: #d14d1a;
         border-color: #d14d1a;
         color: #ffffff;
       }
       
       /* VS Code button overrides for Corgea branding */
       vscode-button[appearance="primary"] {
         --button-primary-background: var(--corgea-orange);
         --button-primary-foreground: #ffffff;
         --button-primary-hover-background: #e55a1f;
       }

  body
    .header
      .header-left
        img.logo(src!=logoURI, alt="Corgea Logo")
        .title Vulnerabilities
      if isAuthenticated
        vscode-button(appearance="secondary", onclick="refresh()")
          i.fas.fa-refresh
    
    if isLoading
      .loading
        vscode-progress-ring
        div Loading vulnerabilities...
    else if !isAuthenticated
      .auth-container
        .auth-message You are not logged in to Corgea
        vscode-button(appearance="primary", onclick="login()")
          i.fas.fa-key
          | &nbsp;Login
    else if projectNotFound
      .no-project-container
        .no-project-card
          .no-project-icon
            i.fas.fa-folder-open
          .no-project-content
            h3.no-project-title Project Not Found
            p.no-project-description This workspace hasn't been scanned by Corgea yet. Run a security scan to discover vulnerabilities in your code.
            .no-project-actions
              button.btn.btn-primary.scan-button.d-flex.align-items-center.justify-content-center(onclick="scanProject()")
                i.fas.fa-shield-alt
                | &nbsp;Run Security Scan
    else if !hasVulnerabilities && !hasSCAVulnerabilities
      .empty-state
        .empty-icon 🛡️
        div No vulnerabilities found in this project
    else
      // Tabs
      ul.nav.nav-tabs(role="tablist")
        li.nav-item(role="presentation")
          button.nav-link.active(id="code-tab", data-bs-toggle="tab", data-bs-target="#code-vulnerabilities", type="button", role="tab", aria-controls="code-vulnerabilities", aria-selected="true")
            i.fas.fa-code
            | &nbsp;Code
            if hasVulnerabilities
              span.count-badge= vulnerabilities.length
        li.nav-item(role="presentation")
          button.nav-link(id="sca-tab", data-bs-toggle="tab", data-bs-target="#sca-vulnerabilities", type="button", role="tab", aria-controls="sca-vulnerabilities", aria-selected="false")
            i.fas.fa-cube
            | &nbsp;Dependencies
            if hasSCAVulnerabilities
              span.count-badge= scaVulnerabilities.length
      
      // Tab Content
      .tab-content
        // Code Vulnerabilities Tab
        .tab-pane.fade.show.active(id="code-vulnerabilities", role="tabpanel", aria-labelledby="code-tab")
          if hasVulnerabilities
            .accordion(id="codeAccordion")
              each fileGroup in fileGroups
                .accordion-item
                  h2.accordion-header(id=`code-heading-${fileGroup.index}`)
                    button.accordion-button.collapsed(type="button", data-bs-toggle="collapse", data-bs-target=`#code-collapse-${fileGroup.index}`, aria-expanded="false", aria-controls=`code-collapse-${fileGroup.index}`)
                      .file-path
                        i.fas.fa-file-code.file-icon
                        span= fileGroup.path
                        span.count-badge= fileGroup.vulnerabilities.length
                  div.accordion-collapse.collapse(id=`code-collapse-${fileGroup.index}`, aria-labelledby=`code-heading-${fileGroup.index}`, data-bs-parent="#codeAccordion")
                    .accordion-body
                      each vuln, vulnIndex in fileGroup.vulnerabilities
                        .vulnerability-item(data-vuln-id=vuln.id, onclick=`showVulnerabilityDetails('${vuln.id}')`)
                          .vuln-info
                            .vuln-name= vuln.classification ? vuln.classification.name : 'Unknown Vulnerability'
                            .vuln-details
                              span.line-number Line #{vuln.location.line_number}
                              span Status: #{vuln.status}
                          .severity-badge(class=vuln.urgency, data-original-severity=vuln.urgency)= vuln.urgency
          else
            .empty-state
              .empty-icon 📝
              div No code vulnerabilities found
        
        // SCA Vulnerabilities Tab  
        .tab-pane.fade(id="sca-vulnerabilities", role="tabpanel", aria-labelledby="sca-tab")
          if hasSCAVulnerabilities
            .accordion(id="scaAccordion")
              each packageGroup in packageGroups
                .accordion-item
                  h2.accordion-header(id=`sca-heading-${packageGroup.index}`)
                    button.accordion-button.collapsed(type="button", data-bs-toggle="collapse", data-bs-target=`#sca-collapse-${packageGroup.index}`, aria-expanded="false", aria-controls=`sca-collapse-${packageGroup.index}`)
                      .package-name
                        i.fas.fa-cube.package-icon
                        span= packageGroup.name
                        span.count-badge= packageGroup.vulnerabilities.length
                  div.accordion-collapse.collapse(id=`sca-collapse-${packageGroup.index}`, aria-labelledby=`sca-heading-${packageGroup.index}`, data-bs-parent="#scaAccordion")
                    .accordion-body
                      each vuln, vulnIndex in packageGroup.vulnerabilities
                        .vulnerability-item(data-sca-vuln-id=vuln.id, onclick=`showSCAVulnerabilityDetails('${vuln.id}')`)
                          .vuln-info
                            .vuln-name= vuln.cve
                            .vuln-details
                              span Fixed in version #{vuln.package.fix_version}
                              span= vuln.package.ecosystem
                          .severity-badge(class=vuln.severity, data-original-severity=vuln.severity)= vuln.severity
          else
            .empty-state
              .empty-icon 📦
              div No SCA vulnerabilities found

    script.
      const vscode = acquireVsCodeApi();
      
      // Store vulnerability data for lookup
      const vulnerabilitiesData = !{JSON.stringify(vulnerabilities || [])};
      const scaVulnerabilitiesData = !{JSON.stringify(scaVulnerabilities || [])};
      
      // Severity mapping for consistent display (short format)
      const severityMap = {
        // Code vulnerabilities (already short)
        'HI': 'HI',
        'CR': 'CR',
        'ME': 'ME', 
        'LO': 'LO',
        // SCA vulnerabilities (convert to short)
        'CRITICAL': 'CR',
        'HIGH': 'HI',
        'MEDIUM': 'ME',
        'LOW': 'LO',
        'UNSPECIFIED': 'UN'
      };
      
      function getSeverityDisplay(severity) {
        return severityMap[severity?.toUpperCase()] || 'UN';
      }
      
      function login() {
        vscode.postMessage({ type: 'login' });
      }
      
      function refresh() {
        vscode.postMessage({ type: 'refresh' });
      }
      
      function scanProject() {
        vscode.postMessage({ type: 'scanProject' });
      }

      
      function showVulnerabilityDetails(vulnId) {
        const vulnerability = vulnerabilitiesData.find(v => v.id === vulnId);
        if (vulnerability) {
          vscode.postMessage({ 
            type: 'showVulnerabilityDetails', 
            vulnerability: vulnerability 
          });
        }
      }
      
      function showSCAVulnerabilityDetails(vulnId) {
        const vulnerability = scaVulnerabilitiesData.find(v => v.id === vulnId);
        if (vulnerability) {
          vscode.postMessage({ 
            type: 'showSCAVulnerabilityDetails', 
            vulnerability: vulnerability,
            allIssues: scaVulnerabilitiesData,
            project: {}
          });
        }
      }
      
      // Auto-expand first accordion item if only one file/package
      document.addEventListener('DOMContentLoaded', function() {
        // Normalize severity badges
        const severityBadges = document.querySelectorAll('.severity-badge[data-original-severity]');
        severityBadges.forEach(badge => {
          const originalSeverity = badge.getAttribute('data-original-severity');
          const normalizedSeverity = getSeverityDisplay(originalSeverity);
          badge.textContent = normalizedSeverity;
          
          // Update the CSS class to use normalized severity for consistent styling
          badge.className = badge.className.replace(originalSeverity, normalizedSeverity);
        });
        
        const codeAccordion = document.getElementById('codeAccordion');
        if (codeAccordion && codeAccordion.children.length === 1) {
          const firstItem = codeAccordion.querySelector('.accordion-button');
          if (firstItem) {
            firstItem.click();
          }
        }
        
        const scaAccordion = document.getElementById('scaAccordion');
        if (scaAccordion && scaAccordion.children.length === 1) {
          const firstItem = scaAccordion.querySelector('.accordion-button');
          if (firstItem) {
            firstItem.click();
          }
        }
      }); 